[{"F:\\Sandeep\\WEB\\react\\path-finding-visualizer\\src\\index.js":"1","F:\\Sandeep\\WEB\\react\\path-finding-visualizer\\src\\reportWebVitals.js":"2","F:\\Sandeep\\WEB\\react\\path-finding-visualizer\\src\\App.js":"3","F:\\Sandeep\\WEB\\react\\path-finding-visualizer\\src\\components\\PathFindingVisualizer.js":"4","F:\\Sandeep\\WEB\\react\\path-finding-visualizer\\src\\components\\Node\\Node.js":"5","F:\\Sandeep\\WEB\\react\\path-finding-visualizer\\src\\algorithms.js":"6","F:\\Sandeep\\WEB\\react\\path-finding-visualizer\\src\\components\\InfoModal.js":"7","F:\\Sandeep\\WEB\\react\\path-finding-visualizer\\src\\components\\NavBar.js":"8"},{"size":457,"mtime":1607062274015,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":218,"mtime":1607253530314,"results":"12","hashOfConfig":"10"},{"size":7663,"mtime":1607254059595,"results":"13","hashOfConfig":"10"},{"size":911,"mtime":1607250373429,"results":"14","hashOfConfig":"10"},{"size":2045,"mtime":1607170183026,"results":"15","hashOfConfig":"10"},{"size":2570,"mtime":1607255884324,"results":"16","hashOfConfig":"10"},{"size":764,"mtime":1607253470542,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1d8i2oi",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\Sandeep\\WEB\\react\\path-finding-visualizer\\src\\index.js",[],["36","37"],"F:\\Sandeep\\WEB\\react\\path-finding-visualizer\\src\\reportWebVitals.js",[],"F:\\Sandeep\\WEB\\react\\path-finding-visualizer\\src\\App.js",[],"F:\\Sandeep\\WEB\\react\\path-finding-visualizer\\src\\components\\PathFindingVisualizer.js",["38"],"F:\\Sandeep\\WEB\\react\\path-finding-visualizer\\src\\components\\Node\\Node.js",[],"F:\\Sandeep\\WEB\\react\\path-finding-visualizer\\src\\algorithms.js",[],"F:\\Sandeep\\WEB\\react\\path-finding-visualizer\\src\\components\\InfoModal.js",["39"],"import { useState } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nconst tutorial = [\n  {\n    title: \"Welcome to Pathfinding Visualizer\",\n    content: [\n      `This short tutorial will walk you through all of the features of this application.`,\n      `If you want to dive right in, feel free to press the \"Skip Tutorial\" button below. Otherwise, press \"Next\"!`,\n    ],\n    image: \"\",\n  },\n  {\n    title: \"What is a pathfinding algorithm?\",\n    content: [\n      `A pathfinding algorithm finds the shortest path between two points. This application visualizes Breadth First Search (BFS) pathfinding algorithm!`,\n      `A BFS alogrithm moves level by level.\n      We can either move right,left ,up or down and movements from a node to another have a \"cost\" of 1.`,\n    ],\n    image: \"\",\n  },\n  {\n    title: \"Adding walls \",\n    content: [\n      `You can switch to wall mode by clicking on the checkbox and add walls in the grid.`,\n      `A wall will block the path and will not allow you to go through.`,\n    ],\n    image:\n      \"https://github.com/sandeep952/path-finding-visualizer/blob/master/public/wallmode.jpeg\",\n  },\n];\n\nconst InfoModal = (props) => {\n  const { showModal, toggleModal } = props;\n\n  const [currStep, setcurrStep] = useState(0);\n\n  const nextStep = () => setcurrStep(currStep + 1);\n\n  const previousStep = () => setcurrStep(currStep - 1);\n  const isLastSlide = currStep === tutorial.length - 1;\n  const isFirstSlide = currStep === 0;\n  const { title, content, image } = tutorial[currStep];\n  return (\n    <div>\n      <Modal isOpen={showModal} toggle={toggleModal}>\n        <ModalHeader toggle={toggleModal}>\n          <span style={{ fontSize: 28 }} className=\"text-center\">\n            {title}\n          </span>\n        </ModalHeader>\n        <ModalBody>\n          <div className=\"text-center lead\">\n            <p>{content[0]}</p>\n\n            <p style={{ fontSize: 18 }}>{content[1]}</p>\n\n            {image && <img src={image} width=\"100px\" height=\"100px\"/>}\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggleModal}>\n            {isLastSlide ? \"Finish\" : \"Skip tutorial\"}\n          </Button>\n          {!isFirstSlide && (\n            <Button color=\"primary\" onClick={previousStep}>\n              Previous\n            </Button>\n          )}\n          <Button color=\"primary\" onClick={nextStep} disabled={isLastSlide}>\n            Next\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default InfoModal;\n","F:\\Sandeep\\WEB\\react\\path-finding-visualizer\\src\\components\\NavBar.js",["40","41","42","43"],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":2,"column":15,"nodeType":"50","messageId":"51","endLine":2,"endColumn":28},{"ruleId":"52","severity":1,"message":"53","line":58,"column":23,"nodeType":"54","endLine":58,"endColumn":70},{"ruleId":"48","severity":1,"message":"55","line":3,"column":3,"nodeType":"50","messageId":"51","endLine":3,"endColumn":11},{"ruleId":"48","severity":1,"message":"56","line":5,"column":3,"nodeType":"50","messageId":"51","endLine":5,"endColumn":16},{"ruleId":"48","severity":1,"message":"57","line":9,"column":3,"nodeType":"50","messageId":"51","endLine":9,"endColumn":10},{"ruleId":"48","severity":1,"message":"58","line":10,"column":3,"nodeType":"50","messageId":"51","endLine":10,"endColumn":13},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'traceBackPath' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Collapse' is defined but never used.","'NavbarToggler' is defined but never used.","'NavLink' is defined but never used.","'NavbarText' is defined but never used.","no-global-assign","no-unsafe-negation"]